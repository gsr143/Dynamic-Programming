/*
During the lesson small girl Alyona works with one famous spreadsheet computer program and learns how to edit tables.
Now she has a table filled with integers. The table consists of n rows and m columns. By ai, j we will denote the integer located at the i-th row and the j-th column. We say that the table is sorted in non-decreasing order in the column j if ai, j ≤ ai + 1, j for all i from 1 to n - 1.
Teacher gave Alyona k tasks. For each of the tasks two integers l and r are given and Alyona has to answer the following question: if one keeps the rows from l to r inclusive and deletes all others, will the table be sorted in non-decreasing order in at least one column? Formally, does there exist such j that ai, j ≤ ai + 1, j for all i from l to r - 1 inclusive.
Alyona is too small to deal with this task and asks you to help!
Input
The first line of the input contains two positive integers n and m (1 ≤ n·m ≤ 100 000) — the number of rows and the number of columns in the table respectively. Note that your are given a constraint that bound the product of these two integers, i.e. the number of elements in the table.

Each of the following n lines contains m integers. The j-th integers in the i of these lines stands for ai, j (1 ≤ ai, j ≤ 109).

The next line of the input contains an integer k (1 ≤ k ≤ 100 000) — the number of task that teacher gave to Alyona.

The i-th of the next k lines contains two integers li and ri (1 ≤ li ≤ ri ≤ n).
Output
Print "Yes" to the i-th line of the output if the table consisting of rows from li to ri inclusive is sorted in non-decreasing order in at least one column. Otherwise, print "No".
Sample Input
5 4
1 2 3 5
3 1 3 2
4 5 2 3
5 5 3 2
4 4 3 4
6
1 1
2 5
4 5
3 5
1 3
1 5
Sample Output
Yes
No
Yes
Yes
Yes
No
*/

#include <bits/stdc++.h>
using namespace std;

int main()
{
    
    int n,m;
    bool f=0;
    cin>>n>>m;
    int** in=new int*[2];
    int** out=new int*[2];
    int* res=new int[n+1];
    for(int i=0;i<2;i++)
    {
        in[i]=new int[m];
        out[i]=new int[m];
    }
    for(int i=0;i<m;i++)
    {
        out[f][i]=1;
    }
    res[0]=0;
     res[1]=1;  
    for(int i=0;i<m;i++)
    {
        cin>>in[f][i];
    }
    for(int i=2;i<=n;i++)
    {
        f=!f;
        int mv=INT_MAX;
        for(int j=0;j<m;j++)
        {
           cin>>in[f][j];
        }
        for(int k=0;k<m;k++)
        {
            int x=!f;
            
              if(in[f][k]>=in[x][k])
              {
                  out[f][k]=out[x][k];
              }
              else
              {
                  
                  out[f][k]=i;
              }
            mv=min(mv,out[f][k]);
        }
        res[i]=mv;
        
    }
    int q,s,e;
    cin>>q;
    while(q--)
    {
        cin>>s>>e;
        
        if(res[e]<=s)
        {
        
            cout<<"Yes\n";
        }
        else
        {
            cout<<"No\n";
        }
    }        
    return 0;
}
