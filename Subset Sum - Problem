/*
Given a set of n integers, find if a subset of sum k can be formed from the given set. Print Yes or No.
Input Format
First line contains a single integer n (1<=n<=1000)
Second line contains n space separated integers (1<=a[i]<=1000)
Last line contains a single positive integer k (1<=k<=1000)
Output Format
Output Yes if there exists a subset whose sum is k, else output No.
Sample Input
3
1 2 3
4
Sample Output
Yes
*/

#include <bits/stdc++.h>
using namespace std;

bool sss(int n,int* a,int s)
{
    bool** dp=new bool*[n+1];
    for(int i=0;i<=n;i++)
    {
        dp[i]=new bool[s+1];
    }
    for(int j=0;j<=s;j++)
    {
        dp[0][j]=false;
    }
    for(int i=0;i<=n;i++)
    {
        dp[i][0]=true;
    }
    
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=s;j++)
        {
            dp[i][j]=dp[i-1][j];
            if(j>=a[i-1])
            {
                dp[i][j]=dp[i-1][j] || dp[i-1][j-a[i-1]];
            }
        }
    }
    
    bool ans=dp[n][s];
    for(int i=0;i<=n;i++)
    {
        delete[] dp[i];
    }
    delete[] dp;
    return ans;
}

int main()
{
    
    int n,s;
    cin>>n;
    int* a=new int [n+1];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cin>>s;
    
    if(sss(n,a,s))
    {
        cout<<"Yes";
    }
    else
    {
        cout<<"No";
    }
    
    return 0;
}
