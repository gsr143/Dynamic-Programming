/*
Bill Gates is on one of his philanthropic journeys to a village in Utopia. He has N packets of candies and would like to distribute one packet to each of the K children in the village (each packet may contain different number of candies). To avoid a fight between the children, he would like to pick K out of N packets such that the unfairness is minimized.
Suppose the K packets have (x1, x2, x3,....xk) candies in them, where xi denotes the number of candies in the ith packet, then we define unfairness as
unfairness=0;
for(i=0;i<n;i++)
for(j=0;j<n;j++)
    unfairness+=abs(xi-xj)
abs(x) denotes absolute value of x.
Input Format
The first line contains an integer N.
The second line contains an integer K.
N lines follow each integer containing the candy in the ith packet.
Output Format
A single integer which will be minimum unfairness.
Constraints
2<=N<=10^5

2<=K<=N

0<= number of candies in each packet <=10^9
Sample Input
7
3
10
100
300
200
1000
20
30
Sample Output
40
Explanation
Bill Gates will choose packets having 10, 20 and 30 candies.So unfairness will be |10-20| + |20-30| + |10-30| = 40. We can verify that it will be minimum in this way.
*/

#include <bits/stdc++.h>
using namespace std;

int main()
{
    long long n;
    cin>>n;
    long long c;
    cin>>c;
    
    long long int* a=new long long int [n+1];
    for(long long i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    a[0]=0;
    sort(a,a+n+1);
    long long int target=0;
    long long int sum=0;
    long long int re=0;
    long long int mv=9223372036854775806;
    for(long long j=2;j<=n;j++)
    {
        
        sum+=a[j-1];
        if(j<=c)
        {
            target=target+ ((j-1)*a[j])-sum;
        }
    
        if(j>c)
        {
            mv=min(mv,target);
            re+=a[j-c];
            target=target-(2*(sum-re))+((c-1)*a[j-c])+((c-1)*a[j]);     
        }
        
    }
      mv=min(mv,target);
    
      cout<<mv<<"\n";
    
    delete[] a;
    return 0;
}
